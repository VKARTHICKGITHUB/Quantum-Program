from qiskit import *
qr = QuantumRegister(2)
cr = ClassicalRegister(2)
circuit = QuantumCircuit(qr, cr)
%matplotlib inline 
circuit.draw()
      
q0_0: 
      
q0_1: 
      
c0: 2/
      
circuit.h(qr[0])
<qiskit.circuit.instructionset.InstructionSet at 0x218e8178300>
circuit.draw(output='mpl')

circuit.cx(qr[0],qr[1])
<qiskit.circuit.instructionset.InstructionSet at 0x218e80d6ac0>
circuit.draw(output='mpl')

circuit.measure(qr,cr)
<qiskit.circuit.instructionset.InstructionSet at 0x218e81785c0>
circuit.draw(output='mpl')

simulator = Aer.get_backend('qasm_simulator')
result = execute(circuit, backend=simulator).result()
from qiskit.visualization import plot_histogram
plot_histogram(result.get_counts(circuit))

from qiskit import IBMQ
IBMQ.load_account()
ibmqfactory.load_account:WARNING:2022-08-28 00:30:20,665: Credentials are already in use. The existing account in the session will be replaced.
<AccountProvider for IBMQ(hub='ibm-q', group='open', project='main')>
provider = IBMQ.get_provider(hub='ibm-q', group='open', project='main')
provider.backends()
[<IBMQSimulator('ibmq_qasm_simulator') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQBackend('ibmq_lima') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQBackend('ibmq_belem') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQBackend('ibmq_quito') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQSimulator('simulator_statevector') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQSimulator('simulator_mps') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQSimulator('simulator_extended_stabilizer') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQSimulator('simulator_stabilizer') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQBackend('ibmq_manila') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQBackend('ibm_nairobi') from IBMQ(hub='ibm-q', group='open', project='main')>,
 <IBMQBackend('ibm_oslo') from IBMQ(hub='ibm-q', group='open', project='main')>]
qcomp = provider.get_backend('ibmq_manila')
job = execute(circuit, backend=qcomp)
from qiskit.tools.monitor import job_monitor
job_monitor(job)
Job Status: job has successfully run
result = job.result()
plot_histogram(result.get_counts(circuit))
result = job.result()
plot_histogram(result.get_counts(circuit))

 
